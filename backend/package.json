{
  "name": "nestprojogon",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:docker:db_bc": "docker compose --env-file ./environments/local.env -f docker-compose.db.yaml up --build",
    "start:local_bc": "nest start --watch -e \"node --env-file ./environments/local.env\"",
    "start:dev": "nest start --env-file ./environments/dev.env",
    "start:prod": "node dist/main --env-file ./environments/prod.env",
    "start:debug": "nest start --debug --watch",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "typeorm-ts-node-commonjs --dataSource ./ormconfig.ts",
    "migration:create": "cross-var npm run typeorm -- migration:create ./src/database/migrations/$npm_config_name",
    "migration:generate": "cross-var npm run typeorm -- migration:generate ./src/database/migrations/$npm_config_name",
    "migration:revert": "npm run typeorm -- migration:revert",
    "migration:run": "npm run typeorm -- migration:run"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.723.0",
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/axios": "^3.0.3",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.0.0",
    "@nestjs/event-emitter": "^2.0.4",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^4.1.1",
    "@nestjs/swagger": "^7.4.0",
    "@nestjs/typeorm": "^10.0.2",
    "@sentry/nestjs": "^8.26.0",
    "@sentry/profiling-node": "^8.26.0",
    "aws-sdk": "^2.1692.0",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cross-var": "^1.1.0",
    "csv-parser": "^3.1.0",
    "dotenv": "^16.4.7",
    "express-fileupload": "^1.5.1",
    "handlebars-layouts": "^3.1.4",
    "inline-css": "^4.0.3",
    "ioredis": "^5.4.1",
    "multer": "^1.4.5-lts.1",
    "nodemailer-express-handlebars": "^7.0.0",
    "npm-check-updates": "^17.1.1",
    "parse-gedcom": "^2.0.1",
    "passport": "^0.7.0",
    "passport-google-oauth2": "^0.2.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.12.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.20"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cookie-parser": "^1.4.8",
    "@types/express": "^4.17.17",
    "@types/express-fileupload": "^1.5.1",
    "@types/jest": "^29.5.2",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.3.1",
    "@types/passport-google-oauth2": "^0.1.10",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "cookie-parser": "^1.4.7",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
