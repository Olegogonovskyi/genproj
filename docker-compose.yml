services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3002:3002"
    depends_on:
      - oleg-genio-postgres
      - oleg-proj-redis
    restart: on-failure
    command: >
      sh -c "npm run migration:run && npm run start"

  oleg-genio-postgres:
    image: postgres:16.1
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - oleg-genio-api-db:/var/lib/postgresql/data

  oleg-proj-redis:
    image: redis:7.2.3
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: redis-server
    restart: unless-stopped

  oleg-proj-s3:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9002"
    restart: unless-stopped
    ports:
      - "8000:9000"
      - "8002:9002"
    volumes:
      - .oleg-genio-api-s3-data:/usr/src/app/s3
    environment:
      - MINIO_ROOT_USER=user            # AWS_S3_ACCESS_KEY
      - MINIO_ROOT_PASSWORD=password    # AWS_S3_SECRET_KEY

  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./clientRoot:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: on-failure

volumes:
  oleg-genio-api-db:
  oleg-genio-api-s3: